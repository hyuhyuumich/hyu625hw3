// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// count_pairs_cpp
int count_pairs_cpp(int n, int m);
RcppExport SEXP _newHyu625Hw3_count_pairs_cpp(SEXP nSEXP, SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(count_pairs_cpp(n, m));
    return rcpp_result_gen;
END_RCPP
}
// gen_logit_cpp
NumericVector gen_logit_cpp(NumericMatrix matrix_1, NumericVector x);
RcppExport SEXP _newHyu625Hw3_gen_logit_cpp(SEXP matrix_1SEXP, SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type matrix_1(matrix_1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(gen_logit_cpp(matrix_1, x));
    return rcpp_result_gen;
END_RCPP
}
// kendall_cpp
double kendall_cpp(NumericVector x, NumericVector y);
RcppExport SEXP _newHyu625Hw3_kendall_cpp(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(kendall_cpp(x, y));
    return rcpp_result_gen;
END_RCPP
}
// matrix_kendall_cpp
double matrix_kendall_cpp(NumericMatrix X);
RcppExport SEXP _newHyu625Hw3_matrix_kendall_cpp(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(matrix_kendall_cpp(X));
    return rcpp_result_gen;
END_RCPP
}
// num_str_cpp
int num_str_cpp(std::string input_num);
RcppExport SEXP _newHyu625Hw3_num_str_cpp(SEXP input_numSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type input_num(input_numSEXP);
    rcpp_result_gen = Rcpp::wrap(num_str_cpp(input_num));
    return rcpp_result_gen;
END_RCPP
}
// quadratic_cpp
double quadratic_cpp(double a, double b, double c);
RcppExport SEXP _newHyu625Hw3_quadratic_cpp(SEXP aSEXP, SEXP bSEXP, SEXP cSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    rcpp_result_gen = Rcpp::wrap(quadratic_cpp(a, b, c));
    return rcpp_result_gen;
END_RCPP
}
// triangle_cpp
bool triangle_cpp(IntegerMatrix edges);
RcppExport SEXP _newHyu625Hw3_triangle_cpp(SEXP edgesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type edges(edgesSEXP);
    rcpp_result_gen = Rcpp::wrap(triangle_cpp(edges));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_newHyu625Hw3_count_pairs_cpp", (DL_FUNC) &_newHyu625Hw3_count_pairs_cpp, 2},
    {"_newHyu625Hw3_gen_logit_cpp", (DL_FUNC) &_newHyu625Hw3_gen_logit_cpp, 2},
    {"_newHyu625Hw3_kendall_cpp", (DL_FUNC) &_newHyu625Hw3_kendall_cpp, 2},
    {"_newHyu625Hw3_matrix_kendall_cpp", (DL_FUNC) &_newHyu625Hw3_matrix_kendall_cpp, 1},
    {"_newHyu625Hw3_num_str_cpp", (DL_FUNC) &_newHyu625Hw3_num_str_cpp, 1},
    {"_newHyu625Hw3_quadratic_cpp", (DL_FUNC) &_newHyu625Hw3_quadratic_cpp, 3},
    {"_newHyu625Hw3_triangle_cpp", (DL_FUNC) &_newHyu625Hw3_triangle_cpp, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_newHyu625Hw3(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
